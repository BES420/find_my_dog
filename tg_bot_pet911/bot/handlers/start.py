from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from tg_bot_pet911.app.models import PetInfo
from tg_bot_pet911.keyboards.inline import get_pet_type_keyboard, get_gender_keyboard
from tg_bot_pet911.states.pet_states import PetRegistration


router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """Handle /start command."""
    # Reset state to make sure we're starting clean
    await state.clear()
    
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤.\n\n"
        "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –ø–∏—Ç–æ–º—Ü–µ, "
        "—è –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n"
        "–ö–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –≤—ã –Ω–∞—à–ª–∏?",
        reply_markup=get_pet_type_keyboard()
    )
    
    # Set state to selecting pet type
    await state.set_state(PetRegistration.selecting_type)


@router.callback_query(PetRegistration.selecting_type, F.data.startswith("pet_type:"))
async def process_pet_type(callback: CallbackQuery, state: FSMContext):
    """Process pet type selection."""
    # Extract pet type from callback data
    pet_type = callback.data.split(":")[-1]
    
    # Save to state
    await state.update_data(pet_type=pet_type)
    
    # Create initial PetInfo object
    user = callback.from_user
    pet_info = PetInfo(
        user_id=user.id,
        chat_id=callback.message.chat.id,
        username=user.username,
        pet_type=pet_type,
        gender=""  # Will be filled in next step
    )
    
    # Save to state
    await state.update_data(pet_info=pet_info.model_dump())
    
    # Edit message to avoid cluttering the chat
    pet_types = {
        "dog": "üê∂ –°–æ–±–∞–∫—É",
        "cat": "üê± –ö–æ—à–∫—É",
        "other": "üêæ –î—Ä—É–≥–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ"
    }
    
    await callback.message.edit_text(
        f"–í—ã –Ω–∞—à–ª–∏ {pet_types.get(pet_type, '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ')}.\n\n"
        f"–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.",
        reply_markup=get_gender_keyboard()
    )
    
    # Update state
    await state.set_state(PetRegistration.selecting_gender)
    
    # Answer callback to remove loading state
    await callback.answer()


@router.callback_query(F.data == "cancel")
async def process_cancel(callback: CallbackQuery, state: FSMContext):
    """Cancel the current operation."""
    await state.clear()
    await callback.message.edit_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start."
    )
    await callback.answer() 